---
import type { CollectionEntry } from "astro:content";
import LinkButton from "./LinkButton.astro";
import { Icon } from "./Icon";

interface Props {
    post: CollectionEntry<"post">;
}

const { post } = Astro.props;
---

<div class="card grid md:grid-cols-[auto_1fr] grid-cols-[1fr]">
    <div class="background">
        {
            post.data.images?.[0] ? (
                <img
                    loading="eager"
                    class="background-image "
                    src={post.data.images[0].src}
                    width={300}
                    height={200}
                    alt={post.data.title}
                />
            ) : null
        }
    </div>
    <div class="caption py-10 px-4">
        <h2 class="headline-accent">{post.data.title}</h2>

        <div class="flex gap-2 py-2 items-center opacity-80">
            {
                post.data.tags?.map((tag) => {
                    return (
                        <div class="text-sm rounded-md bg-zinc-800 inline-block px-2 py-1 capitalize">
                            {tag}
                        </div>
                    );
                })
            }
            <div class="text-base opacity-75">
                {post.data.date?.toLocaleDateString()}
            </div>
        </div>

        <div class="description pt-2">{post.data.description}</div>

        <br />

        <div class="flex gap-2">
            {
                post.data.url ? (
                    <LinkButton url={post.data.url}>Open in browser</LinkButton>
                ) : null
            }
            {
                post.data.links
                    ? post.data.links.map((link) => {
                          if (link.match("github.com"))
                              return (
                                  <LinkButton url={link}>
                                      <span>Source</span>
                                      <Icon class="pl-2" name="arrow-right" />
                                  </LinkButton>
                              );
                          else
                              return (
                                  <LinkButton url={link}>
                                      <span>Docs</span>
                                      <Icon class="pl-2" name="arrow-right" />
                                  </LinkButton>
                              );
                      })
                    : null
            }
        </div>
    </div>
</div>

<style>
    .card {
        gap: 3rem;
        overflow: hidden;
        border: 1px solid var(--color-bg-1);
        border-radius: 8px;
        position: relative;
        width: 100%;
    }
    .card:hover .background-image {
        transform: scale(1.015);
    }
    .caption {
        box-sizing: border-box;
        position: relative;
        z-index: 100;
    }
    .description {
        max-width: 600px;
        opacity: 0.8;
    }
    .background-image {
        object-fit: contain;
        transition: transform 0.33s ease;
        padding: 30px;
        display: block;
        height: 100%;
    }
    .background::after {
        pointer-events: none;
        content: "";
        z-index: 10;
        width: 100%;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        background: linear-gradient(
            -25deg,
            var(--color-bg-1) 10%,
            var(--color-bg-0),
            rgba(20, 20, 22, 0)
        );
    }
    h2 {
        margin: 0;
    }
    hr {
        margin-right: 40%;
    }
</style>
